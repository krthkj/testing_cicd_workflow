# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 3.0)


#{{{{ User Code 01
# Place your code here
#}}}}

enable_language(CXX C ASM)
# Project name
project(unittest-dsa)



#{{{{ User Code 02
# Place your code here
#}}}}

# This setting is useful for providing JSON file used by CodeLite for code completion
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

set(CONFIGURATION_NAME "Release")

set(CL_WORKSPACE_DIRECTORY ..)
# Set default locations
set(CL_OUTPUT_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}/${CL_WORKSPACE_DIRECTORY}/cmake-build-${CONFIGURATION_NAME}/output)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CL_OUTPUT_DIRECTORY})

# Projects


# Top project
# Define some variables
set(PROJECT_unittest-dsa_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/..")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    /usr/local/include
    ../leetcode/include/
    ./include

)


# Compiler options
add_definitions(-Wfatal-errors)
add_definitions(-O1)
add_definitions(-O)
add_definitions(-O3)
add_definitions(-O2)
add_definitions(-fopenmp)
add_definitions(-std=c++20)

# Linker options
set(LINK_OPTIONS -fopenmp)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
    ${WORKSPACE_PATH}/cmake-build-${CONFIGURATION_NAME}/output/
)

# Define the CXX sources
set ( CXX_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_0.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_1004.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_13.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_14.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_179.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_19.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_20.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_217.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_340.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_3.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_643.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_69.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/leetcode/problems/test_9.cpp
    ${CMAKE_CURRENT_LIST_DIR}/src/main.cpp
)

set_source_files_properties(
    ${CXX_SRCS} PROPERTIES COMPILE_FLAGS 
    " -Wfatal-errors -O1 -O -O3 -O2 -fopenmp -std=c++20")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_executable(unittest-dsa ${RC_SRCS} ${CXX_SRCS} ${C_SRCS} ${ASM_SRCS})
target_link_libraries(unittest-dsa ${LINK_OPTIONS})

target_link_libraries(unittest-dsa
    libgtest.a
    libleetcode.so
)


# Adding POST_BUILD commands
add_custom_command(
    TARGET unittest-dsa
    POST_BUILD
    COMMAND strip "${WORKSPACE_PATH}/cmake-build-Release/output/unittest-dsa"   && echo "[----] Strip target unittest-dsa")



#{{{{ User Code 3
# Place your code here
#}}}}

